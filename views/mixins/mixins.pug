mixin createPostForm(userLoggedIn)
    .postFormContainer
        .userImageContainer
            img(src=userLoggedIn.profilePic, alt="User's profile picture")
        .textareaContainer
            textarea#postTextarea(placeholder="What's happening?")
            .buttonsContainer
                button#submitPostButton(disabled="") Post

mixin createReplyModal(userLoggedIn)
    #replyModal.modal.fade(tabindex='-1', role='dialog', aria-labelledby='replyModalLabel', aria-hidden='true')
        .modal-dialog(role='document')
            .modal-content
                .modal-header
                    h5#replyModalLabel.modal-title Reply
                    button.close(type='button', data-dismiss='modal', aria-label='Close')
                    span(aria-hidden='true') &times;
                .modal-body
                    #originalPostContainer
                    .postFormContainer
                        .userImageContainer
                            img(src=userLoggedIn.profilePic, alt="User's profile picture")
                        .textareaContainer
                            textarea#replyTextarea(placeholder="What's happening?")
                .modal-footer
                    button.btn.btn-secondary(type='button', data-dismiss='modal') Close
                    button#submitReplyButton.btn.btn-primary(type='button', disabled="") Reply

mixin createDeletePost()
    #deleteModal.modal.fade(tabindex='-1', role='dialog', aria-labelledby='deleteModalLabel', aria-hidden='true')
        .modal-dialog(role='document')
            .modal-content
                .modal-header
                    h5#deleteModalLabel.modal-title delete the post
                    button.close(type='button', data-dismiss='modal', aria-label='Close')
                    span(aria-hidden='true') &times;
                .modal-body
                    p you won't be able to recover it
                .modal-footer
                    button.btn.btn-secondary(type='button', data-dismiss='modal') Close 
                    button#submitdeleteButton.btn.btn-primary(type='button') Delete

mixin createPostModel(userLoggedIn)
    +createReplyModal(userLoggedIn)
    +createDeletePost()
    +createPinnedPostModal()
    +createUnPinPostModal()

mixin createFollowButton(user, isFollowing)
    - text = isFollowing ? "Following" : "Follow"    //this way to create a variable in pug
    - buttonClass = isFollowing ? "followButton following" : "followButton"
    button(class=buttonClass, data-user=user._id) #{text}

mixin createTab(name, href, isSelected)
    -className = isSelected ? "tab active": "tab"
    a(href=href, class=className)
        span #{name}  


mixin createImageLoadModal()
    #imageUpLoadModal.modal.fade(tabindex='-1', role='dialog', aria-labelledby='imageUpLoadModalLabel', aria-hidden='true')
        .modal-dialog(role='document')
            .modal-content
                .modal-header
                    h5#imageUpLoadModalLabel.modal-title Upload a new picture
                    button.close(type='button', data-dismiss='modal', aria-label='Close')
                    span(aria-hidden='true') &times;
                .modal-body
                    input#filePhoto(type="file", name="filePhoto")

                    .imagePreviewContainer 
                        img#imagePreview
                .modal-footer
                    button.btn.btn-secondary(type='button', data-dismiss='modal') Close 
                    button#submitimageUpLoadButton.btn.btn-primary(type='button') Save


mixin createcoverLoadModal()
    #coverUpLoadModal.modal.fade(tabindex='-1', role='dialog', aria-labelledby='coverUpLoadModalLabel', aria-hidden='true')
        .modal-dialog(role='document')
            .modal-content
                .modal-header
                    h5#coverUpLoadModalLabel.modal-title Upload a new cover
                    button.close(type='button', data-dismiss='modal', aria-label='Close')
                    span(aria-hidden='true') &times;
                .modal-body
                    input#coverPhoto(type="file", name="filePhoto")

                    .coverPreviewContainer 
                        img#coverPreview
                .modal-footer
                    button.btn.btn-secondary(type='button', data-dismiss='modal') Close 
                    button#submitCoverUpLoadButton.btn.btn-primary(type='button') Save


mixin createPinnedPostModal()
    #confirmPinModal.modal.fade(tabindex='-1', role='dialog', aria-labelledby='confirmPinModalLabel', aria-hidden='true')
        .modal-dialog(role='document')
            .modal-content
                .modal-header
                    h5#confirmPinModalModalLabel.modal-title Pin the post
                    button.close(type='button', data-dismiss='modal', aria-label='Close')
                    span(aria-hidden='true') &times;
                .modal-body
                    p this post will appear at the top pf your page, you can only pin one post
                .modal-footer
                    button.btn.btn-secondary(type='button', data-dismiss='modal') Close 
                    button#submitconfirmPinModalButton.btn.btn-primary(type='button') Pin


mixin createUnPinPostModal()
    #unpinModal.modal.fade(tabindex='-1', role='dialog', aria-labelledby='UnPinPostModalLabel', aria-hidden='true')
        .modal-dialog(role='document')
            .modal-content
                .modal-header
                    h5#UnPinPostModalLabel.modal-title UnPin the post ?
                    button.close(type='button', data-dismiss='modal', aria-label='Close')
                    span(aria-hidden='true') &times;
                .modal-body
                    p this post will be Unpinned
                .modal-footer
                    button.btn.btn-secondary(type='button', data-dismiss='modal') Close 
                    button#submitUnPinPostModalButton.btn.btn-primary(type='button') UnPin


//show the group or chat image inside the chat
mixin createChatImage(chatData, userLoggedIn)
    if(!chatData)
        return 
    - var i = 0
    - var maxImagesToShow = 2
    - var remainingUsers = chatData.users.length - maxImagesToShow
    - remainingUsers-- // Remove 1 since we won't show our own image
    
    .chatImagesContainer
        if remainingUsers > 0
            .userCount
                span +#{remainingUsers}

        each user in chatData.users
            if chatData.users.length != 1 && user._id == userLoggedIn._id
                - continue
            else if i >= maxImagesToShow    
                - break
            
            img(src=user.profilePic, alt="User's profile picture", title=user.firstName)
            - i++



mixin createChatNameModal(chat)
    #chatNameModal.modal.fade(tabindex='-1', role='dialog', aria-labelledby='chatNameModalLabel', aria-hidden='true')
        .modal-dialog(role='document')
            .modal-content
                .modal-header
                    h5#chatNameModalLabel.modal-title change the chat Name  ?
                    button.close(type='button', data-dismiss='modal', aria-label='Close')
                    span(aria-hidden='true') &times;
                .modal-body
                    input#chatNameTextbox(type="text", placeholder="Enter a name for this chat", value=chat.chatName)
                .modal-footer
                    button.btn.btn-secondary(type='button', data-dismiss='modal') Close 
                    button#submitchatNameModalButton.btn.btn-primary(type='button') Save

